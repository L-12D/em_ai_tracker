;;; task_manager-edit_task.el --- –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á -*- lexical-binding: t; -*-

;;; –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:
;; –î–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á –≤ Org-mode.
;; –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å, –∫–∞–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∑–∞–¥–∞—á–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: DEADLINE, SCHEDULED,
;; –ø–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å (—á–µ—Ä–µ–∑ —Å–≤–æ–π—Å—Ç–≤–æ REPEAT), —Ç–µ–≥–∏ –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —á–µ–∫-–ª–∏—Å—Ç.
;;
;; üîÆ –í –±—É–¥—É—â–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è:
;; - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–Ω—è—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
;; - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ transient/hydra –º–µ–Ω—é
;; - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

;; ------------------------------
;; ‚öôÔ∏è –ü–∞–Ω–µ–ª—å –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
;; ------------------------------
;; (global-set-key (kbd "C-c e") 'my/edit-task) ;; —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ (DEADLINE, —Ç–µ–≥–∏, —á–µ–∫–ª–∏—Å—Ç –∏ –¥—Ä.)

;; ------------------------------
;; üìé –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤ / –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∫–æ–Ω—Ñ–∏–≥–æ–≤
;; ------------------------------
;; –ß—Ç–æ–±—ã –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª–∞—Å—å –º–æ–∏–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º —Å–ª–æ–≤–∞—Ä—è —à–æ—Ä—Ç–∫–∞—Ç–æ–≤:
;;
;; 1. –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ:
;;    (global-set-key (kbd "C-c e") 'my/edit-task) ;; —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
;;
;; 2. –ò–ª–∏ —á–µ—Ä–µ–∑ define-key:
;;    (define-key some-map (kbd "C-c e") 'my/edit-task) ;; —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
;;
;; 3. –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–∞–∫–∏—Ö —Å—Ç—Ä–æ–∫:
;;    ^\s-*\((\(global-set-key\|define-key\).*\)$
;;
;; 4. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å) –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ:
;;    ;; –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å–æ—á–µ—Ç–∞–Ω–∏—è –∫–ª–∞–≤–∏—à

;; ------------------------------
;; 1. –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
;; ------------------------------

(defun my/edit-task ()
  "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É: DEADLINE, SCHEDULED, –ø–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å, —Ç–µ–≥–∏, —á–µ–∫-–ª–∏—Å—Ç.
–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω–æ –∏–∑ —Å–≤–æ–π—Å—Ç–≤ –∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥."
  (interactive)
  (org-back-to-heading t)
  (let ((choice (read-char-choice
                 "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: [d] DEADLINE, [s] SCHEDULED, [r] –ü–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å, [t] –¢–µ–≥–∏, [c] –ß–µ–∫-–ª–∏—Å—Ç: "
                 '(?d ?s ?r ?t ?c))))
    (cond
     ;; DEADLINE
     ((eq choice ?d)
      (let ((set-deadline (y-or-n-p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å DEADLINE? ")))
        (when set-deadline
          (let ((deadline-time (org-read-date nil t nil "–í—ã–±–µ—Ä–∏—Ç–µ DEADLINE: ")))
            (org-deadline 'set deadline-time)))))

     ;; SCHEDULED
     ((eq choice ?s)
      (let ((set-scheduled (y-or-n-p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SCHEDULED? ")))
        (when set-scheduled
          (let ((scheduled-time (org-read-date nil t nil "–í—ã–±–µ—Ä–∏—Ç–µ SCHEDULED: ")))
            (org-schedule 'set scheduled-time)))))

     ;; –ü–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å (—á–µ—Ä–µ–∑ —Å–≤–æ–π—Å—Ç–≤–æ REPEAT)
     ((eq choice ?r)
      (let ((repeat (read-string "–í–≤–µ–¥–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, ++1w): ")))
        (when (and repeat (not (string-empty-p repeat)))
          (org-set-property "REPEAT" repeat))))

     ;; –¢–µ–≥–∏
     ((eq choice ?t)
      (let ((new-tags (read-string "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ")))
        (when new-tags
          (org-set-tags (split-string new-tags ",[[:space:]]*")))))

     ;; –ß–µ–∫-–ª–∏—Å—Ç
     ((eq choice ?c)
      (let ((item "")
            (checklist-lines '()))
        (while (not (string-empty-p
                     (setq item (read-string "–í–≤–µ–¥–∏—Ç–µ –ø—É–Ω–∫—Ç —á–µ–∫-–ª–∏—Å—Ç–∞ (Enter ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å): "))))
          (push (format "- [ ] %s" item) checklist-lines))
        (when checklist-lines
          (save-excursion
            (org-end-of-subtree)
            (insert "\n** –ß–µ–∫-–ª–∏—Å—Ç\n")
            (insert (string-join (reverse checklist-lines) "\n") "\n")))))))
  ) ;; ‚Üê –ó–∞–∫—Ä—ã–≤–∞–µ—Ç let –∏ defun


;; –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —É–¥–æ–±–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∫–ª–∞–≤–∏—à
(global-set-key (kbd "C-c e") 'my/edit-task) ;; —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é –∑–∞–¥–∞—á—É

(provide 'task_manager-edit_task)
;;; task_manager-edit_task.el ends here
